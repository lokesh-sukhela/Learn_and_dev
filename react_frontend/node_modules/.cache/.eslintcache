[{"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\index.js":"1","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\App.js":"2","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\signup.js":"4","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\signin.js":"5","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\mainfile.js":"6","C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\admin2.js":"7"},{"size":546,"mtime":1694253418539,"results":"8","hashOfConfig":"9"},{"size":531,"mtime":1694407102024,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1694168604660,"results":"11","hashOfConfig":"9"},{"size":1860,"mtime":1694242707470,"results":"12","hashOfConfig":"9"},{"size":1700,"mtime":1694242603234,"results":"13","hashOfConfig":"9"},{"size":1796,"mtime":1694253889681,"results":"14","hashOfConfig":"9"},{"size":8023,"mtime":1694262299302,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1urmyha",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\index.js",[],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\App.js",["40"],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\signup.js",[],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\signin.js",["41"],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\mainfile.js",[],[],"C:\\Users\\KishoreL\\Desktop\\Mini-Project\\react-frontend\\src\\components\\admin2.js",["42","43","44","45","46","47","48","49","50","51"],[],"import React from 'react';\r\nimport { Container, Row, Col, ListGroup, Table,Button } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal,Form } from 'react-bootstrap';\r\nimport {\r\n    TextField,\r\n    \r\n    Typography, \r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n  } from '@mui/material';\r\n\r\nconst Sidebar = () => {\r\n    const listItems = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6', 'Item 7', 'Item 8', 'Item 9'];\r\n\r\n    // Replace this with your table data\r\n    const tableData = [\r\n      { id: 1, name: 'John Doe', age: 30 },\r\n      { id: 2, name: 'Jane Smith', age: 25 },\r\n      { id: 3, name: 'Bob Johnson', age: 35 },\r\n      // Add more rows as needed\r\n    ];\r\n\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [training,setTraining]=useState(\"\");\r\n    const [skill,setskill]=useState(\"\");\r\n    const [skillcat,setskillcat]=useState(\"\");\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [formData, setFormData] = useState({\r\n    \r\n        startDateAndTime: '',\r\n        endDateAndTime: '',\r\n        \r\n      });\r\n\r\n      const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n      };\r\n    \r\n\r\n      const handleChangeenddate = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        // Check if the input is for start date or end date\r\n        if (name === 'startDateAndTime') {\r\n          // Update the start date value\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        } else if (name === 'endDateAndTime') {\r\n          // Update the end date value\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n    \r\n          // Check if the end date is greater than the start date\r\n          const startDate = new Date(formData.startDateAndTime);\r\n          const endDate = new Date(value);\r\n    \r\n          if (endDate <= startDate) {\r\n            // Handle the validation error here (e.g., display an error message)\r\n            alert('End date must be greater than the start date.');\r\n          }\r\n        }\r\n      };\r\n\r\n      const handleChangestartdate = (event) => {\r\n        const { name, value } = event.target;\r\n        \r\n        // Check if the entered date is at least 7 days from the current date\r\n        const currentDate = new Date();\r\n        const selectedDate = new Date(value);\r\n    \r\n        // Calculate the minimum allowed date (7 days from now)\r\n        const minDate = new Date();\r\n        minDate.setDate(currentDate.getDate() + 7);\r\n    \r\n        if (selectedDate < minDate) {\r\n          // Handle the validation error here (e.g., display an error message)\r\n          alert('Start date must be at least 7 days from now.');\r\n        } else {\r\n          // Update the form data if the validation passes\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n        }\r\n      };\r\n\r\n    const trainings=[{trainingname:\"python\",\r\n    value:\"py\",\r\n    skillcategory:[\"Critical Thinking\",\"Problem Solving\",\"Design\"],\r\n    skilltitle:[\"pandas\",\"numpy\",\"app development\",\"DataScience\"]\r\n},\r\n{\r\n    trainingname:\"java\",\r\n    value:\"java\",\r\n    skillcategory:[\"Problem Solving\",\"Development\"],\r\n    skilltitle:[\"Enterprise appliction\",\"mobile app\",\"games\",\"website development\"]\r\n}]\r\n\r\n\r\nconst handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  \r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col md={2} className=\"\">\r\n            <div id=\"list-div\">\r\n            <ListGroup id=\"list\">\r\n            <br></br>\r\n            <br></br>\r\n            <Link to=\"/\" >Dashboard</Link>\r\n            <br></br>\r\n            <Link to=\"/\">TimeSheet</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Projects</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Leave</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Work From Home</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Approvals</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Survey</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Service Desk</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Forms</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Travel</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Expenses</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Settings</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Control Panel</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Resourcing</Link>\r\n            <br></br>\r\n            <Link to=\"/\">Access Control</Link>\r\n            <br></br>\r\n            <Link to=\"/\">L&D</Link>\r\n            </ListGroup>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n          <Button variant=\"primary\" onClick={handleOpenModal}>\r\n          Create Training\r\n        </Button>\r\n{showModal && \r\n<>\r\n<Modal show={showModal} onHide={handleCloseModal}>\r\n<Modal.Header closeButton>\r\n  <Modal.Title>Training Details</Modal.Title>\r\n</Modal.Header>\r\n<Modal.Body>\r\n  <Form>\r\n    <Form.Select aria-label=\"Default select example\" value={training} onChange={(e)=>{\r\n        console.log(e.target.value);\r\n        setTraining(e.target.value);\r\n    }}>\r\n{trainings.map((item,index)=>{\r\nreturn (<option value={index}>{item.trainingname}</option>)\r\n})}\r\n</Form.Select>\r\n<br></br>\r\n<Form.Select aria-label=\"Default select example\" value={skill} onChange={(e)=>{\r\nsetskill(e.target.value);\r\n}}>\r\n{training !== \"\" && trainings[training].skilltitle.map((item,index)=>{\r\nreturn (<option value={index}>{item}</option>)\r\n})}\r\n</Form.Select>\r\n<br></br>\r\n\r\n\r\n<Form.Select aria-label=\"Default select example\" value={skillcat} onChange={(e)=>{\r\nsetskillcat(e.target.value);\r\n}}>\r\n{training !== \"\" && trainings[training].skillcategory.map((item,index)=>{\r\nreturn (<option value={index}>{item}</option>)\r\n})}\r\n</Form.Select>\r\n<br></br>\r\n\r\n</Form>\r\n<Grid item xs={12} sm={6}>\r\n          <TextField\r\n           fullWidth\r\n           label=\"Start Date and Time\"\r\n           type=\"datetime-local\"\r\n           name=\"startDateAndTime\"\r\n           value={formData.startDateAndTime}\r\n           onChange={handleChangestartdate}\r\n           required\r\n          //  InputLabelProps={{ shrink: '' }}\r\n          />\r\n        </Grid>\r\n        <br></br>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"End Date and Time\"\r\n            type=\"datetime-local\"\r\n            name=\"endDateAndTime\"\r\n            value={formData.endDateAndTime}\r\n            onChange={handleChangeenddate}\r\n            required\r\n            InputProps={{ placeholder: '' }}\r\n          />\r\n        </Grid>\r\n        <br></br>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Description\"\r\n            multiline\r\n            rows={4}\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Grid>\r\n    \r\n      <Button type=\"submit\"  variant=\"primary\" >\r\n        Add Training\r\n      </Button>\r\n</Modal.Body>\r\n\r\n\r\n</Modal>\r\n\r\n</>\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Age</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tableData.map((row) => (\r\n                  <tr key={row.id}>\r\n                    <td>{row.id}</td>\r\n                    <td>{row.name}</td>\r\n                    <td>{row.age}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\nexport default Sidebar;\r\n",[],{"ruleId":"52","severity":1,"message":"53","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":63,"column":9,"nodeType":"58","endLine":63,"endColumn":21},{"ruleId":"52","severity":1,"message":"59","line":9,"column":5,"nodeType":"54","messageId":"55","endLine":9,"endColumn":15},{"ruleId":"52","severity":1,"message":"60","line":11,"column":5,"nodeType":"54","messageId":"55","endLine":11,"endColumn":16},{"ruleId":"52","severity":1,"message":"61","line":12,"column":5,"nodeType":"54","messageId":"55","endLine":12,"endColumn":15},{"ruleId":"52","severity":1,"message":"62","line":13,"column":5,"nodeType":"54","messageId":"55","endLine":13,"endColumn":11},{"ruleId":"52","severity":1,"message":"63","line":14,"column":5,"nodeType":"54","messageId":"55","endLine":14,"endColumn":13},{"ruleId":"52","severity":1,"message":"64","line":18,"column":11,"nodeType":"54","messageId":"55","endLine":18,"endColumn":20},{"ruleId":"52","severity":1,"message":"65","line":33,"column":12,"nodeType":"54","messageId":"55","endLine":33,"endColumn":21},{"ruleId":"52","severity":1,"message":"66","line":33,"column":23,"nodeType":"54","messageId":"55","endLine":33,"endColumn":35},{"ruleId":"52","severity":1,"message":"67","line":34,"column":12,"nodeType":"54","messageId":"55","endLine":34,"endColumn":19},{"ruleId":"52","severity":1,"message":"68","line":34,"column":21,"nodeType":"54","messageId":"55","endLine":34,"endColumn":31},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Typography' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'listItems' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used."]